{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/bottle": {
            "get": {
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "bottles"
                ],
                "summary": "Show an account",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Bottle"
                        }
                    }
                }
            },
            "post": {
                "description": "새로운 유리병을 생성합니다.\\n 유리병의 이름을 입력할 수 있습니다. 아무값 없이 요청하면 \"default\" 이름을 갖게 됩니다.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "bottles"
                ],
                "summary": "Create BOTTLE by userID",
                "parameters": [
                    {
                        "description": "Bottle name",
                        "name": "name",
                        "in": "body",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Bottle"
                        }
                    }
                }
            }
        },
        "/bottles": {
            "get": {
                "description": "GET bottle list",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "bottles"
                ],
                "summary": "유리병 목록 조회",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Bottle"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/httputil.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Bottle": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "maturityDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "httputil.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "message": {
                    "type": "string",
                    "example": "status bad request"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    }
}